version: '3.3'

services:
  planner-reasoner:
    image: "${CI_REGISTRY_IMAGE}/planner-reasoner:${CI_COMMIT_REF_NAME}"
    environment:
      - PORT=3020 # internal port
    networks:
      - overlay
    ports:
      - "3021:3020" # mapping of external port to internal port
    stdin_open: true
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 256m
#   sandbox-whc:
#     image: "${CI_REGISTRY_IMAGE}/webapp-whc:${CI_COMMIT_REF_NAME}"
#     environment:
#       JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2"
#     networks:
#       - overlay
#     ports:
#       - "8080:8080"
#     deploy:
#       # not ready for scaling yet
#       replicas: 1
#       placement:
#         constraints: [node.role == worker]
#       restart_policy:
#         condition: on-failure
#       resources:
#         limits:
#           memory: 512m
#     depends_on:
#       # - warehouse-fuseki
#       - mosquitto
#   sandbox-executor:
#     image: "${CI_REGISTRY_IMAGE}/webapp-executor:${CI_COMMIT_REF_NAME}"
#     environment:
#       JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 -DswarmMgrUri=http://swarm-manager:2375 -DdockerNetworkNames=scott_overlay -DdockerServiceNames=scott_sandbox-executor -DhazelcastPeerPort=5701"
#     networks:
#       - overlay
#     ports:
#       - "8083:8080"
#       - "9999:9999"
#     depends_on:
#       - sandbox-whc
#     deploy:
#       replicas: 1
#       resources:
#         limits:
#           memory: 256m
#       placement:
#         constraints: [node.role == worker]
#       restart_policy:
#         condition: on-failure
#   sandbox-twin:
#     image: "${CI_REGISTRY_IMAGE}/webapp-twin-robot:${CI_COMMIT_REF_NAME}"
#     environment:
#       JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2 -DswarmMgrUri=http://swarm-manager:2375 -DdockerNetworkNames=scott_overlay -DdockerServiceNames=scott_sandbox-twin -DhazelcastPeerPort=5701 -Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
#       ROS_MASTER_URI: "http://rosmaster:11311" # TODO remove
#     networks:
#       - overlay
#     ports:
#      - "8081:8080" # Jetty
#      - "9991:9999" # remote debugger
#      - "40000-40100:40000-40100" # ROS ephemeral ports TODO remove
#     depends_on:
#       - warehouse-fuseki
#       - mosquitto
#     deploy:
#       replicas: 3
#       resources:
#         limits:
# #          cpus: '0.25'
#           memory: 256m
#       placement:
#         constraints: [node.role == worker]
#       restart_policy:
#         condition: on-failure
#   warehouse-fuseki:
#     image: stain/jena-fuseki
#     networks:
#       - overlay
#     ports:
#       - "3030:3030"
#     volumes:
#       - ./fuseki_config:/fuseki/configuration
#     deploy:
#       replicas: 1
#       placement:
#         constraints: [node.role == worker]
#       restart_policy:
#         condition: on-failure
#       resources:
#         limits:
#           memory: 768m
#   mosquitto:
#     image: eclipse-mosquitto
#     networks:
#       - overlay
#     ports:
#       - "1883:1883"
#       - "9001:9001"
#     volumes:
#       - ./mosquitto:/mosquitto/config
#     deploy:
#       replicas: 1
#       placement:
#         constraints: [node.role == worker]
#       restart_policy:
#         condition: on-failure
#       resources:
#         limits:
#           memory: 128m

networks:
  overlay:
