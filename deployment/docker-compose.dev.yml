version: '3.3'

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:alpine
    networks:
      - overlay
    ports:
      - 8080:8080
    command: -port 8080 -log stdout
    # TODO why
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      restart_policy:
        condition: none
  planner:
    image: scott/planner-reasoner
    environment:
      - PORT=3020 # internal port
    networks:
      overlay:
        aliases:
            - planner.svc
#    ports:
#      - "3021:3020" # external:internal
    stdin_open: true
    deploy:
      labels:
        caddy.address: planner.svc
        caddy.targetport: 3020
        caddy.tls: "off"
      replicas: 1
      restart_policy:
        # debug only
        condition: none
      resources:
        limits:
          memory: 384m
  whc:
    image: scott/webapp-whc
    environment:
#      JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
      LYO_BASE: "http://whc.svc:8080/"
    networks:
      overlay:
        aliases:
            - whc.svc
    ports:
      - "9980:9999"
    deploy:
      labels:
        caddy.address: whc.svc
        caddy.targetport: 8080
        caddy.tls: "off"
      replicas: 1
      restart_policy:
        # debug only
        condition: none
      resources:
        limits:
          memory: 384m
  twins:
    image: scott/webapp-twin-robot
    environment:
#      JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
      LYO_BASE: "http://twins.svc:8080/"
    networks:
      overlay:
        aliases:
            - twins.svc
    expose:
      - 80
    ports:
      - "9981:9999"
    deploy:
      labels:
        caddy.address: twins.svc
        caddy.targetport: 8080
        caddy.tls: "off"
      replicas: 1
      resources:
        limits:
          memory: 384m
      restart_policy:
        condition: none
  fuseki:
    image: scott/jena-fuseki
    networks:
      overlay:
        aliases:
            - fuseki.svc
    deploy:
      labels:
        caddy.address: fuseki.svc
        caddy.targetport: 3030
        caddy.tls: "off"
      replicas: 1
      restart_policy:
        condition: none
      resources:
        limits:
          memory: 512m
  mosquitto:
    image: scott/eclipse-mosquitto
    networks:
      overlay:
        aliases:
            - mqtt.svc
    ports:
      - "1883:1883"
      - "9001:9001"
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      resources:
        limits:
          memory: 192m
  # sandbox-executor:
  #   image: scott/webapp-executor
  #   # environment:
  #     # JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
  #   networks:
  #     - overlay
  #   ports:
  #     - "8083:8080"
  #     # - "9999:9999"
  #   # depends_on:
  #     # - sandbox-whc
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 384m
  #     restart_policy:
  #       condition: on-failure
  # svc-location:
  #   image: scott/webapp-svc-location
  #   # environment:
  #   #   JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
  #   networks:
  #     - overlay
  #   ports:
  #    - "8090:8080" # Jetty
  #   #  - "9991:9999" # remote debugger
  #   # depends_on:
  #     # - warehouse-fuseki
  #     # - mosquitto
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 384m
  #     restart_policy:
  #       condition: on-failure

networks:
  overlay:
