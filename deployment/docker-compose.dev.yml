version: '3.3'

services:
  planner-reasoner:
    image: scott/planner-reasoner
    environment:
      - PORT=3020 # internal port
    networks:
      - overlay
    ports:
      - "3021:3020" # external:internal
    stdin_open: true
    deploy:
      replicas: 1
      restart_policy:
        # debug only
        condition: none
      resources:
        limits:
          memory: 384m
  sandbox-whc:
    image: scott/webapp-whc
    environment:
      JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
    networks:
      - overlay
    ports:
      - "8080:8080"
      - "9980:9999"
    deploy:
      replicas: 1
      restart_policy:
        # debug only
        condition: none
      resources:
        limits:
          memory: 384m
  sandbox-twin:
    image: scott/webapp-twin-robot
    environment:
      JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
    networks:
      - overlay
    ports:
     - "8081:8080"
     - "9981:9999"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 384m
      restart_policy:
        condition: none
  warehouse-fuseki:
    image: scott/jena-fuseki
    networks:
      - overlay
    ports:
      - "3030:3030"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512m
  mosquitto:
    image: scott/eclipse-mosquitto
    networks:
      - overlay
    ports:
      - "1883:1883"
      - "9001:9001"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 192m

  # Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
#      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: test:2:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Flink
  job-cluster:
    image: scott/flink-trs-twin
    ports:
      - "8881:8081"
    command: job-cluster --job-classname se.ericsson.cf.scott.sandbox.flink.StreamingJob -Djobmanager.rpc.address=job-cluster -Dparallelism.default=2
    deploy:
      replicas: 1
      restart_policy:
        # debug only
        condition: none

  taskmanager:
    image: scott/flink-trs-twin
    command: task-manager -Djobmanager.rpc.address=job-cluster
    deploy:
      replicas: 2
      restart_policy:
        # debug only
        condition: none

  # sandbox-executor:
  #   image: scott/webapp-executor
  #   # environment:
  #     # JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
  #   networks:
  #     - overlay
  #   ports:
  #     - "8083:8080"
  #     # - "9999:9999"
  #   # depends_on:
  #     # - sandbox-whc
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 384m
  #     restart_policy:
  #       condition: on-failure
  # twin-shelf:
  #   image: scott/webapp-twin-shelf
  #   # environment:
  #   #   JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
  #   networks:
  #     - overlay
  #   ports:
  #    - "8082:8080" # Jetty
  #   #  - "9991:9999" # remote debugger
  #   # depends_on:
  #     # - warehouse-fuseki
  #     # - mosquitto
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 384m
  #     restart_policy:
  #       condition: on-failure
  # svc-location:
  #   image: scott/webapp-svc-location
  #   # environment:
  #   #   JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,address=9999,server=y,suspend=n"
  #   networks:
  #     - overlay
  #   ports:
  #    - "8090:8080" # Jetty
  #   #  - "9991:9999" # remote debugger
  #   # depends_on:
  #     # - warehouse-fuseki
  #     # - mosquitto
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 384m
  #     restart_policy:
  #       condition: on-failure

networks:
  overlay:
