{
	"info": {
		"_postman_id": "d9f1a879-936f-4ab3-9605-dcac7498d593",
		"name": "planner_reasoner",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Generate PDDL (example)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "text/x-pddl"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n# --- Planning Domain\n\n#    (define (domain adl-blocksworld)\n#      (:requirements :typing :equality :fluents)\n#      (:types location block)\n#      (:predicates (on ?x ?y - (either block location))\n#                   (clear ?x - (either block location))\n#      )\n#      (:functions (moved ?m - block)\n#                  (total-moved))\n#      (:action move\n#         :parameters (?b - block ?x ?y - (either block location))\n#         :precondition\n#            (and\n#              (not(= ?b ?y))\n#              (clear ?b)\n#              (on ?b ?x)\n#              (clear ?y)\n#            )\n#         :effect\n#            (and\n#              (on ?b ?y)\n#              (not (on ?b ?x))\n#              (clear ?x)\n#              (increase (moved ?b) 1)\n#              (increase (total-moved) 1)\n#              (when\n#                (not (= ?y table))\n#                (not (clear ?y))\n#              )\n#            )\n#      )\n#    )\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/pddlCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"pddlCreationFactory"
					]
				},
				"description": "Generate PDDL text from pddl:Domain, pddl:Problem or pddl:Plan resources or any combination of them."
			},
			"response": []
		},
		{
			"name": "Generate plan (example)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n\n\n:adl-blocksworld-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"adl-blocksworld-problem\" ;\n  pddl:domain :adl-blocksworld ;\n  pddl:object :a ,\n              :b ,\n              :c ,\n              :table ;\n  pddl:init [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :a\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :b\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :c\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :total-moved ] ;\n              pddl:right 0\n            ] ,\n            [ a :on ;\n              :on-x :b ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :a ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :c ;\n              :on-y :a\n            ] ,\n            [ a :clear ;\n              :clear-x :b\n            ] ,\n            [ a :clear ;\n              :clear-x :c\n            ] ,\n            [ a :clear ;\n              :clear-x :table\n            ] ;\n  pddl:goal [ a pddl:Or ;\n              pddl:argument [ a :on ;\n                              :on-x :b ;\n                              :on-y :c\n                            ] ,\n                            [ a :on ;\n                              :on-x :c ;\n                              :on-y :b\n                            ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:a\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"a\" .\n\n:b\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"b\" .\n\n:c\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"c\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/planCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"planCreationFactory"
					]
				},
				"description": "Invoke planner to generate a pddl:Plan from pddl:Domain and pddl:Problem."
			},
			"response": []
		},
		{
			"name": "Generate validated plan (example)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n\n:adl-blocksworld-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"adl-blocksworld-problem\" ;\n  pddl:domain :adl-blocksworld ;\n  pddl:object :a ,\n              :b ,\n              :c ,\n              :table ;\n  pddl:init [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :a\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :b\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :c\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :total-moved ] ;\n              pddl:right 0\n            ] ,\n            [ a :on ;\n              :on-x :b ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :a ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :c ;\n              :on-y :a\n            ] ,\n            [ a :clear ;\n              :clear-x :b\n            ] ,\n            [ a :clear ;\n              :clear-x :c\n            ] ,\n            [ a :clear ;\n              :clear-x :table\n            ] ;\n  pddl:goal [ a pddl:Or ;\n              pddl:argument [ a :on ;\n                              :on-x :b ;\n                              :on-y :c\n                            ] ,\n                            [ a :on ;\n                              :on-x :c ;\n                              :on-y :b\n                            ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:a\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"a\" .\n\n:b\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"b\" .\n\n:c\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"c\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/validatedPlanCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"validatedPlanCreationFactory"
					]
				},
				"description": "Generate plan and annotate resulting plan pddl:Step resources with pddl:adding, pddl:removing, pddl:updating."
			},
			"response": []
		},
		{
			"name": "Generate PDDL (warehouse)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "text/x-pddl"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/warehouse/> .\n\n:warehouse-domain\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"warehouse-domain\" ;\n  pddl:type :Robot ,\n            :Place ,\n            :Waypoint ,\n            :Object ,\n            :ObjType ,\n            :Charge ;\n  pddl:predicate :is-at ,\n                 :situated-at ,\n                 :is-on ,\n                 :is-origin-on ,\n                 :is-type ,\n                 :carrying ,\n                 :can-move ,\n                 :is-recharging ,\n                 :is-charging-station ;\n  pddl:function :capacity ,\n                :charge-level ,\n                :max-charge ,\n                :low-charge ,\n                :high-charge ;\n  pddl:action :moveToWaypoint ,\n              :pickupAtPlace ,\n              :dropAtPlace ,\n              :startRecharge ,\n              :stopRecharge .\n\n:Robot\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Robot\" .\n\n:Place\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Place\" .\n\n:Waypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Waypoint\" .\n\n:Object\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Object\" .\n\n:ObjType\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"ObjType\" .\n\n:Charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Charge\" .\n\n:is-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-at\" ;\n  pddl:parameter :is-at-x ,\n                 :is-at-y .\n\n:is-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:situated-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"situated-at\" ;\n  pddl:parameter :situated-at-x ,\n                 :situated-at-y .\n\n:situated-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:situated-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-on\" ;\n  pddl:parameter :is-on-x ,\n                 :is-on-y .\n\n:is-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-origin-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-origin-on\" ;\n  pddl:parameter :is-origin-on-x ,\n                 :is-origin-on-y .\n\n:is-origin-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-origin-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-type\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-type\" ;\n  pddl:parameter :is-type-x ,\n                 :is-type-y .\n\n:is-type-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-type-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :ObjType ;\n  sh:order 2 .\n\n:carrying\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"carrying\" ;\n  pddl:parameter :carrying-x ,\n                 :carrying-y .\n\n:carrying-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:carrying-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:can-move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"can-move\" ;\n  pddl:parameter :can-move-x ,\n                 :can-move-y .\n\n:can-move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Waypoint ;\n  sh:order 1 .\n\n:can-move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-recharging\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-recharging\" ;\n  pddl:parameter :is-recharging-x .\n\n:is-recharging-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-charging-station\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-charging-station\" ;\n  pddl:parameter :is-charging-station-x .\n\n:is-charging-station-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:capacity\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"capacity\" ;\n  pddl:parameter :capacity-x .\n\n:capacity-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:charge-level\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"charge-level\" ;\n  pddl:parameter :charge-level-x .\n\n:charge-level-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:max-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"max-charge\" ;\n  pddl:parameter :max-charge-x .\n\n:max-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:low-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"low-charge\" ;\n  pddl:parameter :low-charge-x .\n\n:low-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:high-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"high-charge\" ;\n  pddl:parameter :high-charge-x .\n\n:high-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"moveToWaypoint\" ;\n  pddl:parameter :moveToWaypoint-r ,\n                 :moveToWaypoint-x ,\n                 :moveToWaypoint-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :moveToWaypoint-r ;\n                                      :is-at-y :moveToWaypoint-x\n                                    ] ,\n                                    [ a :can-move ;\n                                      :can-move-x :moveToWaypoint-x ;\n                                      :can-move-y :moveToWaypoint-y\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :moveToWaypoint-r\n                                                    ]\n                                    ],\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :moveToWaypoint-r\n                                                ];\n                                      pddl:right [ a :low-charge ;\n                                                     :low-charge-x :moveToWaypoint-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-at ;\n                                :is-at-x :moveToWaypoint-r ;\n                                :is-at-y :moveToWaypoint-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :is-at ;\n                                                :is-at-x :moveToWaypoint-r ;\n                                                :is-at-y :moveToWaypoint-x\n                                              ]\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :moveToWaypoint-r\n                                               ] ;\n                                pddl:argument 2\n                              ]\n              ] .\n\n:moveToWaypoint-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"from-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:moveToWaypoint-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"to-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:pickupAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"pickupAtPlace\" ;\n  pddl:parameter :pickupAtPlace-r ,\n                 :pickupAtPlace-o ,\n                 :pickupAtPlace-p ,\n                 :pickupAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :pickupAtPlace-r ;\n                                      :is-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :pickupAtPlace-p ;\n                                      :situated-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :is-on ;\n                                      :is-on-x :pickupAtPlace-o ;\n                                      :is-on-y :pickupAtPlace-p\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :pickupAtPlace-r\n                                                    ]\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :capacity ;\n                                                  :capacity-x :pickupAtPlace-r\n                                                ];\n                                      pddl:right 0\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :is-on ;\n                                                :is-on-x :pickupAtPlace-o ;\n                                                :is-on-y :pickupAtPlace-p\n                                              ]\n                              ] ,\n                              [ a :carrying ;\n                                :carrying-x :pickupAtPlace-r ;\n                                :carrying-y :pickupAtPlace-o\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:pickupAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:pickupAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:pickupAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:pickupAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:dropAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"dropAtPlace\" ;\n  pddl:parameter :dropAtPlace-r ,\n                 :dropAtPlace-o ,\n                 :dropAtPlace-p ,\n                 :dropAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :dropAtPlace-r ;\n                                      :is-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :dropAtPlace-p ;\n                                      :situated-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :carrying ;\n                                      :carrying-x :dropAtPlace-r ;\n                                      :carrying-y :dropAtPlace-o\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument  [ a :is-recharging ;\n                                                       :is-recharging-x :dropAtPlace-r\n                                                     ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :carrying ;\n                                                :carrying-x :dropAtPlace-r ;\n                                                :carrying-y :dropAtPlace-o\n                                              ]\n                              ] ,\n                              [ a :is-on ;\n                                :is-on-x :dropAtPlace-o ;\n                                :is-on-y :dropAtPlace-p\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:dropAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:dropAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:dropAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:dropAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:startRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"startRecharge\" ;\n  pddl:parameter :startRecharge-r ,\n                 :startRecharge-p ,\n                 :startRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :startRecharge-r ;\n                                      :is-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :startRecharge-p ;\n                                      :situated-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :is-charging-station ;\n                                      :is-charging-station-x :startRecharge-p\n                                    ] ,\n                                    [ a pddl:LT ;\n                                      pddl:left [ a :charge-level;\n                                                  :charge-level-x :startRecharge-r\n                                                ];\n                                      pddl:right [ a :max-charge;\n                                                   :max-charge-x :startRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :startRecharge-r\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :startRecharge-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:startRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:startRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:startRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:stopRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"stopRecharge\" ;\n  pddl:parameter :stopRecharge-r ,\n                 :stopRecharge-p ,\n                 :stopRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :stopRecharge-r ;\n                                      :is-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :stopRecharge-p ;\n                                      :situated-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :is-recharging ;\n                                      :is-recharging-x :stopRecharge-r\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :stopRecharge-r\n                                                ];\n                                      pddl:right [ a :high-charge ;\n                                                   :high-charge-x :stopRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:Not ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :stopRecharge-r\n                              ]\n              ] .\n\n:stopRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:stopRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:stopRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:warehouse-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"warehouse-problem\" ;\n  pddl:domain :warehouse-domain ;\n  pddl:object :robot1 ,\n              :robot2 ,\n              :shelf1 ,\n              :shelf2 ,\n              :shelf3 ,\n              :chargingStation1 ,\n              :cbin1 ,\n              :cbOut2 ,\n              :o1 ,\n              :o2 ,\n              :o3 ,\n              :o4 ,\n              :o5 ,\n              :o6 ,\n              :o7 ,\n              :o8 ,\n              :Red ,\n              :Blue ,\n              :Green ,\n              :wp4 ,\n              :wp1 ,\n              :wp2 ,\n              :wp3 ;\n  pddl:init [ a :is-at ;\n              :is-at-x :robot2 ;\n              :is-at-y :wp3\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot2\n                        ] ;\n              pddl:right 20\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot2\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot2\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot2\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot2\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot2\n                            ]\n            ] ,\n            [ a :is-at ;\n              :is-at-x :robot1 ;\n              :is-at-y :wp2\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot1\n                        ] ;\n              pddl:right 7\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot1\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot1\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot1\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot1\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot1\n                            ]\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf1 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf2 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf3 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :chargingStation1 ;\n              :situated-at-y :wp4\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbIn1 ;\n              :situated-at-y :wp1\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbOut2 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o1 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o1 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o1 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o2 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o2 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o2 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o3 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o3 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o3 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o4 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o4 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o4 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o5 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o5 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o5 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o6 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o6 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o6 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o7 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o7 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o7 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o8 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o8 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o8 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp2\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp4\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp1\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp4\n            ] ;\n  pddl:goal [ a pddl:ForAll ;\n                pddl:parameter :forall-x ;\n                pddl:argument [ a pddl:Imply ;\n                                pddl:left [  a :is-type ;\n                                            :is-type-x :forall-x ;\n                                            :is-type-y :Red\n                                          ] ;\n                                pddl:right [ a :is-on ;\n                                             :is-on-x :forall-x ;\n                                             :is-on-y :shelf3\n                                           ]\n                              ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:forall-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  pddl:type :Object ;\n  rdfs:label \"x\" ;\n  sh:order 1 .\n\n:robot1\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot1\" .\n\n:robot2\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot2\" .\n\n:shelf1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf1\" .\n\n:shelf2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf2\" .\n\n:shelf3\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf3\" .\n\n:chargingStation1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"chargingStation1\" .\n\n:cbin1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbin1\" .\n\n:cbOut2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbOut2\" .\n\n:o1\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o1\" .\n\n:o2\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o2\" .\n\n:o3\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o3\" .\n\n:o4\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o4\" .\n\n:o5\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o5\" .\n\n:o6\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o6\" .\n\n:o7\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o7\" .\n\n:o8\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o8\" .\n\n:Red\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Red\" .\n\n:Blue\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Blue\" .\n\n:Green\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Green\" .\n\n:wp1\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp1\" .\n\n:wp2\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp2\" .\n\n:wp3\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp3\" .\n\n:wp4\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp4\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/pddlCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"pddlCreationFactory"
					]
				},
				"description": "Generate PDDL text from pddl:Domain, pddl:Problem or pddl:Plan resources or any combination of them."
			},
			"response": []
		},
		{
			"name": "Generate plan (warehouse)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/warehouse/> .\n\n:warehouse-domain\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"warehouse-domain\" ;\n  pddl:type :Robot ,\n            :Place ,\n            :Waypoint ,\n            :Object ,\n            :ObjType ,\n            :Charge ;\n  pddl:predicate :is-at ,\n                 :situated-at ,\n                 :is-on ,\n                 :is-origin-on ,\n                 :is-type ,\n                 :carrying ,\n                 :can-move ,\n                 :is-recharging ,\n                 :is-charging-station ;\n  pddl:function :capacity ,\n                :charge-level ,\n                :max-charge ,\n                :low-charge ,\n                :high-charge ;\n  pddl:action :moveToWaypoint ,\n              :pickupAtPlace ,\n              :dropAtPlace ,\n              :startRecharge ,\n              :stopRecharge .\n\n:Robot\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Robot\" .\n\n:Place\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Place\" .\n\n:Waypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Waypoint\" .\n\n:Object\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Object\" .\n\n:ObjType\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"ObjType\" .\n\n:Charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Charge\" .\n\n:is-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-at\" ;\n  pddl:parameter :is-at-x ,\n                 :is-at-y .\n\n:is-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:situated-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"situated-at\" ;\n  pddl:parameter :situated-at-x ,\n                 :situated-at-y .\n\n:situated-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:situated-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-on\" ;\n  pddl:parameter :is-on-x ,\n                 :is-on-y .\n\n:is-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-origin-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-origin-on\" ;\n  pddl:parameter :is-origin-on-x ,\n                 :is-origin-on-y .\n\n:is-origin-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-origin-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-type\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-type\" ;\n  pddl:parameter :is-type-x ,\n                 :is-type-y .\n\n:is-type-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-type-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :ObjType ;\n  sh:order 2 .\n\n:carrying\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"carrying\" ;\n  pddl:parameter :carrying-x ,\n                 :carrying-y .\n\n:carrying-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:carrying-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:can-move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"can-move\" ;\n  pddl:parameter :can-move-x ,\n                 :can-move-y .\n\n:can-move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Waypoint ;\n  sh:order 1 .\n\n:can-move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-recharging\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-recharging\" ;\n  pddl:parameter :is-recharging-x .\n\n:is-recharging-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-charging-station\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-charging-station\" ;\n  pddl:parameter :is-charging-station-x .\n\n:is-charging-station-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:capacity\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"capacity\" ;\n  pddl:parameter :capacity-x .\n\n:capacity-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:charge-level\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"charge-level\" ;\n  pddl:parameter :charge-level-x .\n\n:charge-level-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:max-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"max-charge\" ;\n  pddl:parameter :max-charge-x .\n\n:max-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:low-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"low-charge\" ;\n  pddl:parameter :low-charge-x .\n\n:low-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:high-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"high-charge\" ;\n  pddl:parameter :high-charge-x .\n\n:high-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"moveToWaypoint\" ;\n  pddl:parameter :moveToWaypoint-r ,\n                 :moveToWaypoint-x ,\n                 :moveToWaypoint-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :moveToWaypoint-r ;\n                                      :is-at-y :moveToWaypoint-x\n                                    ] ,\n                                    [ a :can-move ;\n                                      :can-move-x :moveToWaypoint-x ;\n                                      :can-move-y :moveToWaypoint-y\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :moveToWaypoint-r\n                                                    ]\n                                    ],\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :moveToWaypoint-r\n                                                ];\n                                      pddl:right [ a :low-charge ;\n                                                     :low-charge-x :moveToWaypoint-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-at ;\n                                :is-at-x :moveToWaypoint-r ;\n                                :is-at-y :moveToWaypoint-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :is-at ;\n                                                :is-at-x :moveToWaypoint-r ;\n                                                :is-at-y :moveToWaypoint-x\n                                              ]\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :moveToWaypoint-r\n                                               ] ;\n                                pddl:argument 2\n                              ]\n              ] .\n\n:moveToWaypoint-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"from-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:moveToWaypoint-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"to-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:pickupAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"pickupAtPlace\" ;\n  pddl:parameter :pickupAtPlace-r ,\n                 :pickupAtPlace-o ,\n                 :pickupAtPlace-p ,\n                 :pickupAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :pickupAtPlace-r ;\n                                      :is-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :pickupAtPlace-p ;\n                                      :situated-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :is-on ;\n                                      :is-on-x :pickupAtPlace-o ;\n                                      :is-on-y :pickupAtPlace-p\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :pickupAtPlace-r\n                                                    ]\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :capacity ;\n                                                  :capacity-x :pickupAtPlace-r\n                                                ];\n                                      pddl:right 0\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :is-on ;\n                                                :is-on-x :pickupAtPlace-o ;\n                                                :is-on-y :pickupAtPlace-p\n                                              ]\n                              ] ,\n                              [ a :carrying ;\n                                :carrying-x :pickupAtPlace-r ;\n                                :carrying-y :pickupAtPlace-o\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:pickupAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:pickupAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:pickupAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:pickupAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:dropAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"dropAtPlace\" ;\n  pddl:parameter :dropAtPlace-r ,\n                 :dropAtPlace-o ,\n                 :dropAtPlace-p ,\n                 :dropAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :dropAtPlace-r ;\n                                      :is-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :dropAtPlace-p ;\n                                      :situated-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :carrying ;\n                                      :carrying-x :dropAtPlace-r ;\n                                      :carrying-y :dropAtPlace-o\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument  [ a :is-recharging ;\n                                                       :is-recharging-x :dropAtPlace-r\n                                                     ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :carrying ;\n                                                :carrying-x :dropAtPlace-r ;\n                                                :carrying-y :dropAtPlace-o\n                                              ]\n                              ] ,\n                              [ a :is-on ;\n                                :is-on-x :dropAtPlace-o ;\n                                :is-on-y :dropAtPlace-p\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:dropAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:dropAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:dropAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:dropAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:startRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"startRecharge\" ;\n  pddl:parameter :startRecharge-r ,\n                 :startRecharge-p ,\n                 :startRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :startRecharge-r ;\n                                      :is-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :startRecharge-p ;\n                                      :situated-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :is-charging-station ;\n                                      :is-charging-station-x :startRecharge-p\n                                    ] ,\n                                    [ a pddl:LT ;\n                                      pddl:left [ a :charge-level;\n                                                  :charge-level-x :startRecharge-r\n                                                ];\n                                      pddl:right [ a :max-charge;\n                                                   :max-charge-x :startRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :startRecharge-r\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :startRecharge-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:startRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:startRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:startRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:stopRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"stopRecharge\" ;\n  pddl:parameter :stopRecharge-r ,\n                 :stopRecharge-p ,\n                 :stopRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :stopRecharge-r ;\n                                      :is-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :stopRecharge-p ;\n                                      :situated-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :is-recharging ;\n                                      :is-recharging-x :stopRecharge-r\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :stopRecharge-r\n                                                ];\n                                      pddl:right [ a :high-charge ;\n                                                   :high-charge-x :stopRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:Not ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :stopRecharge-r\n                              ]\n              ] .\n\n:stopRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:stopRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:stopRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:warehouse-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"warehouse-problem\" ;\n  pddl:domain :warehouse-domain ;\n  pddl:object :robot1 ,\n              :robot2 ,\n              :shelf1 ,\n              :shelf2 ,\n              :shelf3 ,\n              :chargingStation1 ,\n              :cbin1 ,\n              :cbOut2 ,\n              :o1 ,\n              :o2 ,\n              :o3 ,\n              :o4 ,\n              :o5 ,\n              :o6 ,\n              :o7 ,\n              :o8 ,\n              :Red ,\n              :Blue ,\n              :Green ,\n              :wp4 ,\n              :wp1 ,\n              :wp2 ,\n              :wp3 ;\n  pddl:init [ a :is-at ;\n              :is-at-x :robot2 ;\n              :is-at-y :wp3\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot2\n                        ] ;\n              pddl:right 20\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot2\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot2\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot2\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot2\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot2\n                            ]\n            ] ,\n            [ a :is-at ;\n              :is-at-x :robot1 ;\n              :is-at-y :wp2\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot1\n                        ] ;\n              pddl:right 7\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot1\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot1\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot1\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot1\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot1\n                            ]\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf1 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf2 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf3 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :chargingStation1 ;\n              :situated-at-y :wp4\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbIn1 ;\n              :situated-at-y :wp1\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbOut2 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o1 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o1 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o1 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o2 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o2 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o2 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o3 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o3 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o3 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o4 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o4 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o4 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o5 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o5 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o5 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o6 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o6 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o6 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o7 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o7 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o7 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o8 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o8 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o8 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp2\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp4\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp1\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp4\n            ] ;\n  pddl:goal [ a pddl:ForAll ;\n                pddl:parameter :forall-x ;\n                pddl:argument [ a pddl:Imply ;\n                                pddl:left [  a :is-type ;\n                                            :is-type-x :forall-x ;\n                                            :is-type-y :Red\n                                          ] ;\n                                pddl:right [ a :is-on ;\n                                             :is-on-x :forall-x ;\n                                             :is-on-y :shelf3\n                                           ]\n                              ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:forall-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  pddl:type :Object ;\n  rdfs:label \"x\" ;\n  sh:order 1 .\n\n:robot1\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot1\" .\n\n:robot2\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot2\" .\n\n:shelf1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf1\" .\n\n:shelf2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf2\" .\n\n:shelf3\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf3\" .\n\n:chargingStation1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"chargingStation1\" .\n\n:cbin1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbin1\" .\n\n:cbOut2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbOut2\" .\n\n:o1\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o1\" .\n\n:o2\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o2\" .\n\n:o3\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o3\" .\n\n:o4\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o4\" .\n\n:o5\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o5\" .\n\n:o6\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o6\" .\n\n:o7\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o7\" .\n\n:o8\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o8\" .\n\n:Red\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Red\" .\n\n:Blue\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Blue\" .\n\n:Green\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Green\" .\n\n:wp1\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp1\" .\n\n:wp2\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp2\" .\n\n:wp3\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp3\" .\n\n:wp4\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp4\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/planCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"planCreationFactory"
					]
				},
				"description": "Invoke planner to generate a pddl:Plan from pddl:Domain and pddl:Problem."
			},
			"response": []
		},
		{
			"name": "Generate validated plan (warehouse)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/warehouse/> .\n\n:warehouse-domain\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"warehouse-domain\" ;\n  pddl:type :Robot ,\n            :Place ,\n            :Waypoint ,\n            :Object ,\n            :ObjType ,\n            :Charge ;\n  pddl:predicate :is-at ,\n                 :situated-at ,\n                 :is-on ,\n                 :is-origin-on ,\n                 :is-type ,\n                 :carrying ,\n                 :can-move ,\n                 :is-recharging ,\n                 :is-charging-station ;\n  pddl:function :capacity ,\n                :charge-level ,\n                :max-charge ,\n                :low-charge ,\n                :high-charge ;\n  pddl:action :moveToWaypoint ,\n              :pickupAtPlace ,\n              :dropAtPlace ,\n              :startRecharge ,\n              :stopRecharge .\n\n:Robot\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Robot\" .\n\n:Place\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Place\" .\n\n:Waypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Waypoint\" .\n\n:Object\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Object\" .\n\n:ObjType\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"ObjType\" .\n\n:Charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"Charge\" .\n\n:is-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-at\" ;\n  pddl:parameter :is-at-x ,\n                 :is-at-y .\n\n:is-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:situated-at\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"situated-at\" ;\n  pddl:parameter :situated-at-x ,\n                 :situated-at-y .\n\n:situated-at-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:situated-at-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-on\" ;\n  pddl:parameter :is-on-x ,\n                 :is-on-y .\n\n:is-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-origin-on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-origin-on\" ;\n  pddl:parameter :is-origin-on-x ,\n                 :is-origin-on-y .\n\n:is-origin-on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-origin-on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:is-type\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-type\" ;\n  pddl:parameter :is-type-x ,\n                 :is-type-y .\n\n:is-type-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Object ;\n  sh:order 1 .\n\n:is-type-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :ObjType ;\n  sh:order 2 .\n\n:carrying\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"carrying\" ;\n  pddl:parameter :carrying-x ,\n                 :carrying-y .\n\n:carrying-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:carrying-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:can-move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"can-move\" ;\n  pddl:parameter :can-move-x ,\n                 :can-move-y .\n\n:can-move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Waypoint ;\n  sh:order 1 .\n\n:can-move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:is-recharging\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-recharging\" ;\n  pddl:parameter :is-recharging-x .\n\n:is-recharging-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:is-charging-station\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"is-charging-station\" ;\n  pddl:parameter :is-charging-station-x .\n\n:is-charging-station-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Place ;\n  sh:order 1 .\n\n:capacity\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"capacity\" ;\n  pddl:parameter :capacity-x .\n\n:capacity-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:charge-level\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"charge-level\" ;\n  pddl:parameter :charge-level-x .\n\n:charge-level-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:max-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"max-charge\" ;\n  pddl:parameter :max-charge-x .\n\n:max-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:low-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"low-charge\" ;\n  pddl:parameter :low-charge-x .\n\n:low-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:high-charge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"high-charge\" ;\n  pddl:parameter :high-charge-x .\n\n:high-charge-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"moveToWaypoint\" ;\n  pddl:parameter :moveToWaypoint-r ,\n                 :moveToWaypoint-x ,\n                 :moveToWaypoint-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :moveToWaypoint-r ;\n                                      :is-at-y :moveToWaypoint-x\n                                    ] ,\n                                    [ a :can-move ;\n                                      :can-move-x :moveToWaypoint-x ;\n                                      :can-move-y :moveToWaypoint-y\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :moveToWaypoint-r\n                                                    ]\n                                    ],\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :moveToWaypoint-r\n                                                ];\n                                      pddl:right [ a :low-charge ;\n                                                     :low-charge-x :moveToWaypoint-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-at ;\n                                :is-at-x :moveToWaypoint-r ;\n                                :is-at-y :moveToWaypoint-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :is-at ;\n                                                :is-at-x :moveToWaypoint-r ;\n                                                :is-at-y :moveToWaypoint-x\n                                              ]\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :moveToWaypoint-r\n                                               ] ;\n                                pddl:argument 2\n                              ]\n              ] .\n\n:moveToWaypoint-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:moveToWaypoint-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"from-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 2 .\n\n:moveToWaypoint-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"to-waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:pickupAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"pickupAtPlace\" ;\n  pddl:parameter :pickupAtPlace-r ,\n                 :pickupAtPlace-o ,\n                 :pickupAtPlace-p ,\n                 :pickupAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :pickupAtPlace-r ;\n                                      :is-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :pickupAtPlace-p ;\n                                      :situated-at-y :pickupAtPlace-w\n                                    ] ,\n                                    [ a :is-on ;\n                                      :is-on-x :pickupAtPlace-o ;\n                                      :is-on-y :pickupAtPlace-p\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument [ a :is-recharging ;\n                                                      :is-recharging-x :pickupAtPlace-r\n                                                    ]\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :capacity ;\n                                                  :capacity-x :pickupAtPlace-r\n                                                ];\n                                      pddl:right 0\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :is-on ;\n                                                :is-on-x :pickupAtPlace-o ;\n                                                :is-on-y :pickupAtPlace-p\n                                              ]\n                              ] ,\n                              [ a :carrying ;\n                                :carrying-x :pickupAtPlace-r ;\n                                :carrying-y :pickupAtPlace-o\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :pickupAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:pickupAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:pickupAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:pickupAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:pickupAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:dropAtPlace\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"dropAtPlace\" ;\n  pddl:parameter :dropAtPlace-r ,\n                 :dropAtPlace-o ,\n                 :dropAtPlace-p ,\n                 :dropAtPlace-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :dropAtPlace-r ;\n                                      :is-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :dropAtPlace-p ;\n                                      :situated-at-y :dropAtPlace-w\n                                    ] ,\n                                    [ a :carrying ;\n                                      :carrying-x :dropAtPlace-r ;\n                                      :carrying-y :dropAtPlace-o\n                                    ] ,\n                                    [ a pddl:Not ;\n                                      pddl:argument  [ a :is-recharging ;\n                                                       :is-recharging-x :dropAtPlace-r\n                                                     ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a pddl:Not ;\n                                pddl:argument [ a :carrying ;\n                                                :carrying-x :dropAtPlace-r ;\n                                                :carrying-y :dropAtPlace-o\n                                              ]\n                              ] ,\n                              [ a :is-on ;\n                                :is-on-x :dropAtPlace-o ;\n                                :is-on-y :dropAtPlace-p\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :capacity ;\n                                                 :capacity-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Decrease ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :dropAtPlace-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:dropAtPlace-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:dropAtPlace-o\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"object\" ;\n  pddl:type :Object ;\n  sh:order 2 .\n\n:dropAtPlace-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 3 .\n\n:dropAtPlace-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 4 .\n\n:startRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"startRecharge\" ;\n  pddl:parameter :startRecharge-r ,\n                 :startRecharge-p ,\n                 :startRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :startRecharge-r ;\n                                      :is-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :startRecharge-p ;\n                                      :situated-at-y :startRecharge-w\n                                    ] ,\n                                    [ a :is-charging-station ;\n                                      :is-charging-station-x :startRecharge-p\n                                    ] ,\n                                    [ a pddl:LT ;\n                                      pddl:left [ a :charge-level;\n                                                  :charge-level-x :startRecharge-r\n                                                ];\n                                      pddl:right [ a :max-charge;\n                                                   :max-charge-x :startRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :startRecharge-r\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :charge-level ;\n                                                 :charge-level-x :startRecharge-r\n                                               ] ;\n                                pddl:argument 1\n                              ]\n              ] .\n\n:startRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:startRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:startRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:stopRecharge\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"stopRecharge\" ;\n  pddl:parameter :stopRecharge-r ,\n                 :stopRecharge-p ,\n                 :stopRecharge-w ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a :is-at ;\n                                      :is-at-x :stopRecharge-r ;\n                                      :is-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :situated-at ;\n                                      :situated-at-x :stopRecharge-p ;\n                                      :situated-at-y :stopRecharge-w\n                                    ] ,\n                                    [ a :is-recharging ;\n                                      :is-recharging-x :stopRecharge-r\n                                    ] ,\n                                    [ a pddl:GT ;\n                                      pddl:left [ a :charge-level ;\n                                                  :charge-level-x :stopRecharge-r\n                                                ];\n                                      pddl:right [ a :high-charge ;\n                                                   :high-charge-x :stopRecharge-r\n                                                 ]\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:Not ;\n                pddl:argument [ a :is-recharging ;\n                                :is-recharging-x :stopRecharge-r\n                              ]\n              ] .\n\n:stopRecharge-r\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"robot\" ;\n  pddl:type :Robot ;\n  sh:order 1 .\n\n:stopRecharge-p\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"place\" ;\n  pddl:type :Place ;\n  sh:order 2 .\n\n:stopRecharge-w\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"waypoint\" ;\n  pddl:type :Waypoint ;\n  sh:order 3 .\n\n:warehouse-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"warehouse-problem\" ;\n  pddl:domain :warehouse-domain ;\n  pddl:object :robot1 ,\n              :robot2 ,\n              :shelf1 ,\n              :shelf2 ,\n              :shelf3 ,\n              :chargingStation1 ,\n              :cbin1 ,\n              :cbOut2 ,\n              :o1 ,\n              :o2 ,\n              :o3 ,\n              :o4 ,\n              :o5 ,\n              :o6 ,\n              :o7 ,\n              :o8 ,\n              :Red ,\n              :Blue ,\n              :Green ,\n              :wp4 ,\n              :wp1 ,\n              :wp2 ,\n              :wp3 ;\n  pddl:init [ a :is-at ;\n              :is-at-x :robot2 ;\n              :is-at-y :wp3\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot2\n                        ] ;\n              pddl:right 20\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot2\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot2\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot2\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot2\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot2\n                            ]\n            ] ,\n            [ a :is-at ;\n              :is-at-x :robot1 ;\n              :is-at-y :wp2\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :charge-level ;\n                          :charge-level-x :robot1\n                        ] ;\n              pddl:right 7\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :capacity ;\n                          :capacity-x :robot1\n                        ] ;\n              pddl:right 1\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :max-charge ;\n                          :max-charge-x :robot1\n                        ] ;\n              pddl:right 10\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :high-charge ;\n                          :high-charge-x :robot1\n                        ] ;\n              pddl:right 6\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :low-charge ;\n                          :low-charge-x :robot1\n                        ] ;\n              pddl:right 3\n            ] ,\n            [ a pddl:Not ;\n              pddl:argument [ a :is-recharging ;\n                              :is-recharging-x :robot1\n                            ]\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf1 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf2 ;\n              :situated-at-y :wp2\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :shelf3 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :chargingStation1 ;\n              :situated-at-y :wp4\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbIn1 ;\n              :situated-at-y :wp1\n            ] ,\n            [ a :situated-at ;\n              :situated-at-x :cbOut2 ;\n              :situated-at-y :wp3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o1 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o1 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o1 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o2 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o2 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o2 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o3 ;\n              :is-type-y :Red\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o3 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o3 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o4 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o4 ;\n              :is-on-y :shelf1\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o4 ;\n              :is-origin-on-y :shelf1\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o5 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o5 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o5 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o6 ;\n              :is-type-y :Blue\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o6 ;\n              :is-on-y :shelf2\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o6 ;\n              :is-origin-on-y :shelf2\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o7 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o7 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o7 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :is-type ;\n              :is-type-x :o8 ;\n              :is-type-y :Green\n            ] ,\n            [ a :is-on ;\n              :is-on-x :o8 ;\n              :is-on-y :shelf3\n            ] ,\n            [ a :is-origin-on ;\n              :is-origin-on-x :o8 ;\n              :is-origin-on-y :shelf3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp2\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp1 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp3\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp2 ;\n              :can-move-y :wp4\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp1\n            ] ,\n            [ a :can-move ;\n              :can-move-x :wp3 ;\n              :can-move-y :wp4\n            ] ;\n  pddl:goal [ a pddl:ForAll ;\n                pddl:parameter :forall-x ;\n                pddl:argument [ a pddl:Imply ;\n                                pddl:left [  a :is-type ;\n                                            :is-type-x :forall-x ;\n                                            :is-type-y :Red\n                                          ] ;\n                                pddl:right [ a :is-on ;\n                                             :is-on-x :forall-x ;\n                                             :is-on-y :shelf3\n                                           ]\n                              ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:forall-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  pddl:type :Object ;\n  rdfs:label \"x\" ;\n  sh:order 1 .\n\n:robot1\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot1\" .\n\n:robot2\n  a :Robot ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"robot2\" .\n\n:shelf1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf1\" .\n\n:shelf2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf2\" .\n\n:shelf3\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"shelf3\" .\n\n:chargingStation1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"chargingStation1\" .\n\n:cbin1\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbin1\" .\n\n:cbOut2\n  a :Place ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"cbOut2\" .\n\n:o1\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o1\" .\n\n:o2\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o2\" .\n\n:o3\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o3\" .\n\n:o4\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o4\" .\n\n:o5\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o5\" .\n\n:o6\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o6\" .\n\n:o7\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o7\" .\n\n:o8\n  a :Object ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"o8\" .\n\n:Red\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Red\" .\n\n:Blue\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Blue\" .\n\n:Green\n  a :ObjType ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"Green\" .\n\n:wp1\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp1\" .\n\n:wp2\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp2\" .\n\n:wp3\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp3\" .\n\n:wp4\n  a :Waypoint ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"wp4\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/validatedPlanCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"validatedPlanCreationFactory"
					]
				},
				"description": "Generate plan and annotate resulting plan pddl:Step resources with pddl:adding, pddl:removing, pddl:updating."
			},
			"response": []
		}
	]
}