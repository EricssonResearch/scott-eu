{
	"info": {
		"name": "planner_reasoner",
		"_postman_id": "0cfb949f-8d9d-8c0f-c52c-384be305c1bd",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Generate PDDL",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "text/x-pddl"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n# --- Planning Domain\n\n#    (define (domain adl-blocksworld)\n#      (:requirements :typing :equality :fluents)\n#      (:types location block)\n#      (:predicates (on ?x ?y - (either block location))\n#                   (clear ?x - (either block location))\n#      )\n#      (:functions (moved ?m - block)\n#                  (total-moved))\n#      (:action move\n#         :parameters (?b - block ?x ?y - (either block location))\n#         :precondition\n#            (and\n#              (not(= ?b ?y))\n#              (clear ?b)\n#              (on ?b ?x)\n#              (clear ?y)\n#            )\n#         :effect\n#            (and\n#              (on ?b ?y)\n#              (not (on ?b ?x))\n#              (clear ?x)\n#              (increase (moved ?b) 1)\n#              (increase (total-moved) 1)\n#              (when\n#                (not (= ?y table))\n#                (not (clear ?y))\n#              )\n#            )\n#      )\n#    )\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/pddlCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"pddlCreationFactory"
					]
				},
				"description": "Generate PDDL text from pddl:Domain, pddl:Problem or pddl:Plan resources or any combination of them."
			},
			"response": []
		},
		{
			"name": "Generate plan",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n\n\n:adl-blocksworld-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"adl-blocksworld-problem\" ;\n  pddl:domain :adl-blocksworld ;\n  pddl:object :a ,\n              :b ,\n              :c ,\n              :table ;\n  pddl:init [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :a\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :b\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :c\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :total-moved ] ;\n              pddl:right 0\n            ] ,\n            [ a :on ;\n              :on-x :b ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :a ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :c ;\n              :on-y :a\n            ] ,\n            [ a :clear ;\n              :clear-x :b\n            ] ,\n            [ a :clear ;\n              :clear-x :c\n            ] ,\n            [ a :clear ;\n              :clear-x :table\n            ] ;\n  pddl:goal [ a pddl:Or ;\n              pddl:argument [ a :on ;\n                              :on-x :b ;\n                              :on-y :c\n                            ] ,\n                            [ a :on ;\n                              :on-x :c ;\n                              :on-y :b\n                            ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:a\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"a\" .\n\n:b\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"b\" .\n\n:c\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"c\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/planCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"planCreationFactory"
					]
				},
				"description": "Invoke planner to generate a pddl:Plan from pddl:Domain and pddl:Problem."
			},
			"response": []
		},
		{
			"name": "Generate validated plan",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/turtle"
					},
					{
						"key": "Content-Type",
						"value": "application/turtle"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix oslc: <http://open-services.net/ns/core#> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix pddl: <http://ontology.cf.ericsson.net/pddl/> .\n@prefix : <http://ontology.cf.ericsson.net/pddl_example/> .\n\n:adl-blocksworld\n  a pddl:Domain ;\n  oslc:instanceShape pddl:DomainShape ;\n  rdfs:label \"adl-blocksworld\" ;\n  pddl:type :location ,\n            :block ;\n  pddl:constant :table ;\n  pddl:predicate :on ,\n                 :clear ;\n  pddl:function :moved ,\n                :total-moved ;\n  pddl:action :move .\n\n:location\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"location\" .\n\n:block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:PrimitiveType ;\n  oslc:instanceShape pddl:PrimitiveTypeShape ;\n  rdfs:label \"block\" .\n\n:location-or-block\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:EitherType ;\n  oslc:instanceShape pddl:EitherTypeShape ;\n  rdfs:member :location ,\n              :block .\n\n:on\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"on\" ;\n  pddl:parameter :on-x ,\n                 :on-y .\n\n:on-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:on-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:clear\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Predicate ;\n  oslc:instanceShape pddl:PredicateShape ;\n  rdfs:label \"clear\" ;\n  pddl:parameter :clear-x .\n\n:clear-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 1 .\n\n:moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"moved\" ;\n  pddl:parameter :moved-m .\n\n:moved-m\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"m\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:total-moved\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Function ;\n  oslc:instanceShape pddl:FunctionShape ;\n  rdfs:label \"total-moved\" .\n\n:move\n  a rdfs:Class ;\n  rdfs:subClassOf pddl:Action ;\n  oslc:instanceShape pddl:ActionShape ;\n  rdfs:label \"move\" ;\n  pddl:parameter :move-b ,\n                 :move-x ,\n                 :move-y ;\n  pddl:precondition [ a pddl:And ;\n                      pddl:argument [ a pddl:Not ;\n                                      pddl:argument [ a pddl:Equality ;\n                                                      pddl:left :move-b ;\n                                                      pddl:right :move-y\n                                                    ]\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-b\n                                    ] ,\n                                    [ a :on ;\n                                      :on-x :move-b ;\n                                      :on-y :move-x\n                                    ] ,\n                                    [ a :clear ;\n                                      :clear-x :move-y\n                                    ]\n                    ] ;\n  pddl:effect [ a pddl:And ;\n                pddl:argument [ a :on ;\n                                :on-x :move-b ;\n                                :on-y :move-y\n                              ] ,\n                              [ a pddl:Not ;\n                                pddl:argument [ a :on ;\n                                                :on-x :move-b ;\n                                                :on-y :move-x\n                                              ]\n                              ] ,\n                              [ a :clear ;\n                                :clear-x :move-x\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :moved ;\n                                                 :moved-m :move-b\n                                               ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:Increase ;\n                                pddl:parameter [ a :total-moved ] ;\n                                pddl:argument 1\n                              ] ,\n                              [ a pddl:When ;\n                                pddl:parameter [ a pddl:Not ;\n                                                 pddl:argument [ a pddl:Equality ;\n                                                                 pddl:left :move-y ;\n                                                                 pddl:right :table\n                                                               ]\n                                               ] ;\n                                pddl:argument [ a pddl:Not ;\n                                                pddl:argument [ a :clear ;\n                                                                :clear-x :move-y\n                                                              ]\n                                              ]\n                              ]\n              ] .\n\n:move-b\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"b\" ;\n  pddl:type :block ;\n  sh:order 1 .\n\n:move-x\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"x\" ;\n  pddl:type :location-or-block ;\n  sh:order 2 .\n\n:move-y\n  a pddl:Parameter ;\n  oslc:instanceShape pddl:ParameterShape ;\n  rdfs:label \"y\" ;\n  pddl:type :location-or-block ;\n  sh:order 3 .\n\n:table\n  a :location ;\n  oslc:instanceShape pddl:ConstantShape ;\n  rdfs:label \"table\" .\n\n:adl-blocksworld-problem\n  a pddl:Problem ;\n  oslc:instanceShape pddl:ProblemShape ;\n  rdfs:label \"adl-blocksworld-problem\" ;\n  pddl:domain :adl-blocksworld ;\n  pddl:object :a ,\n              :b ,\n              :c ,\n              :table ;\n  pddl:init [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :a\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :b\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :moved ;\n                          :moved-m :c\n                        ] ;\n              pddl:right 0\n            ] ,\n            [ a pddl:EQ ;\n              pddl:left [ a :total-moved ] ;\n              pddl:right 0\n            ] ,\n            [ a :on ;\n              :on-x :b ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :a ;\n              :on-y :table\n            ] ,\n            [ a :on ;\n              :on-x :c ;\n              :on-y :a\n            ] ,\n            [ a :clear ;\n              :clear-x :b\n            ] ,\n            [ a :clear ;\n              :clear-x :c\n            ] ,\n            [ a :clear ;\n              :clear-x :table\n            ] ;\n  pddl:goal [ a pddl:Or ;\n              pddl:argument [ a :on ;\n                              :on-x :b ;\n                              :on-y :c\n                            ] ,\n                            [ a :on ;\n                              :on-x :c ;\n                              :on-y :b\n                            ]\n            ] ;\n  pddl:minimize [ a pddl:total-time ].\n\n:a\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"a\" .\n\n:b\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"b\" .\n\n:c\n  a :block ;\n  oslc:instanceShape pddl:ObjectShape ;\n  rdfs:label \"c\" .\n"
				},
				"url": {
					"raw": "http://localhost:3020/planner/validatedPlanCreationFactory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"planner",
						"validatedPlanCreationFactory"
					]
				},
				"description": "Generate plan and annotate resulting plan pddl:Step resources with pddl:adding, pddl:removing, pddl:updating."
			},
			"response": []
		}
	]
}