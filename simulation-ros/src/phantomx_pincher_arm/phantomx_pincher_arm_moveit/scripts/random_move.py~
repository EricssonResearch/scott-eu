#! /usr/bin/env python
import sys
import rospy
import geometry_msgs.msg
from moveit_commander import RobotCommander, roscpp_initialize, roscpp_shutdown
from moveit_msgs.msg import RobotState



if __name__ == '__main__':

    roscpp_initialize(sys.argv)
    rospy.init_node('moveit_py_demo', anonymous=True)

    robot = RobotCommander()
    rospy.sleep(1)

    print "Current state:"
    robot.get_current_state()

    # plan to a random location
    a = robot.pincher_arm
    print a.get_joints()
    #exit()
    a.set_num_planning_attempts(10000)
    a.set_planning_time(60)
    a.set_planner_id("RRTkConfigDefault")
    print "Time to plan:"
    print a.get_planning_time()
    pose_now = a.get_current_pose()
    print pose_now
    a.set_start_state(RobotState())
#    pose_target = geometry_msgs.msg.Pose()
#    pose_target.position = pose_now.pose.position
#    pose_target.position.x += 0
#    pose_target.orientation = pose_now.pose.orientation
    print "Tolerances"
    a.set_goal_position_tolerance(0.025)
    a.set_goal_orientation_tolerance(1)
    print a.get_goal_position_tolerance()
    print a.get_goal_orientation_tolerance()
    #r = a.set_pose_target(pose_target)
    x = 0.28#pose_now.pose.position.x
    y = 0#pose_now.pose.position.y
    z = -0.011#pose_now.pose.position.z-0.05
    r = a.set_position_target([x,y,z])
    print "Planning to random joint position: "
    print x,y,z
    rospy.sleep(1)
    p = a.plan()
    print "Solution:"
    print p
    a.execute(p)
    rospy.sleep(15)
    print a.get_current_pose()
    roscpp_shutdown()
