// Start of user code Copyright
/*******************************************************************************
 * Copyright (c) 2012 IBM Corporation and others.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *
 *     Russell Boykin       - initial API and implementation
 *     Alberto Giammaria    - initial API and implementation
 *     Chris Peters         - initial API and implementation
 *     Gianluca Bernardini  - initial API and implementation
 *       Sam Padgett          - initial API and implementation
 *     Michael Fiedler      - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (422448)
 *     Matthieu Helleboid   - Support for multiple Service Providers.
 *     Anass Radouani       - Support for multiple Service Providers.
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/
// End of user code

package eu.scott.warehouse.domains.scott;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.core.exception.OslcCoreApplicationException;
import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.ResourceShapeFactory;

import eu.scott.warehouse.domains.scott.ScottDomainConstants;


import eu.scott.warehouse.domains.scott.ScottDomainConstants;
import eu.scott.warehouse.domains.scott.ExecutableAction;

// Start of user code imports
// End of user code

// Start of user code preClassCode
// End of user code

// Start of user code classAnnotations
// End of user code
@OslcNamespace(ScottDomainConstants.ACTIONEXECUTIONREPORT_NAMESPACE)
@OslcName(ScottDomainConstants.ACTIONEXECUTIONREPORT_LOCALNAME)
@OslcResourceShape(title = "ActionExecutionReport Resource Shape", describes = ScottDomainConstants.ACTIONEXECUTIONREPORT_TYPE)
public class ActionExecutionReport
    extends AbstractResource
    implements IActionExecutionReport
{
    // Start of user code attributeAnnotation:executionSuccess
    // End of user code
    private Boolean executionSuccess;
    // Start of user code attributeAnnotation:action
    // End of user code
    private ExecutableAction action;
    // Start of user code attributeAnnotation:executionBegin
    // End of user code
    private Date executionBegin;
    // Start of user code attributeAnnotation:executionEnd
    // End of user code
    private Date executionEnd;
    
    // Start of user code classAttributes
    // End of user code
    // Start of user code classMethods
    // End of user code
    public ActionExecutionReport()
    {
        super();
    
        // Start of user code constructor1
        // End of user code
    }
    
    public ActionExecutionReport(final URI about)
    {
        super(about);
    
        // Start of user code constructor2
        // End of user code
    }
    
    public static ResourceShape createResourceShape() throws OslcCoreApplicationException, URISyntaxException {
        return ResourceShapeFactory.createResourceShape(OSLC4JUtils.getServletURI(),
        OslcConstants.PATH_RESOURCE_SHAPES,
        ScottDomainConstants.ACTIONEXECUTIONREPORT_PATH,
        ActionExecutionReport.class);
    }
    
    
    public String toString()
    {
        return toString(false);
    }
    
    public String toString(boolean asLocalResource)
    {
        String result = "";
        // Start of user code toString_init
        // End of user code
    
        if (asLocalResource) {
            result = result + "{a Local ActionExecutionReport Resource} - update ActionExecutionReport.toString() to present resource as desired.";
            // Start of user code toString_bodyForLocalResource
            // End of user code
        }
        else {
            result = String.valueOf(getAbout());
        }
    
        // Start of user code toString_finalize
        // End of user code
    
        return result;
    }
    
    
    // Start of user code getterAnnotation:executionSuccess
    // End of user code
    @OslcName("executionSuccess")
    @OslcPropertyDefinition(ScottDomainConstants.SCOTT_WAREHOUSE_NAMSPACE + "executionSuccess")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isExecutionSuccess()
    {
        // Start of user code getterInit:executionSuccess
        // End of user code
        return executionSuccess;
    }
    
    // Start of user code getterAnnotation:action
    // End of user code
    @OslcName("action")
    @OslcPropertyDefinition(ScottDomainConstants.SCOTT_WAREHOUSE_NAMSPACE + "action")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.LocalResource)
    @OslcRange({ScottDomainConstants.EXECUTABLEACTION_TYPE})
    @OslcReadOnly(false)
    public ExecutableAction getAction()
    {
        // Start of user code getterInit:action
        // End of user code
        return action;
    }
    
    // Start of user code getterAnnotation:executionBegin
    // End of user code
    @OslcName("executionBegin")
    @OslcPropertyDefinition(ScottDomainConstants.SCOTT_WAREHOUSE_NAMSPACE + "executionBegin")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.DateTime)
    @OslcReadOnly(false)
    public Date getExecutionBegin()
    {
        // Start of user code getterInit:executionBegin
        // End of user code
        return executionBegin;
    }
    
    // Start of user code getterAnnotation:executionEnd
    // End of user code
    @OslcName("executionEnd")
    @OslcPropertyDefinition(ScottDomainConstants.SCOTT_WAREHOUSE_NAMSPACE + "executionEnd")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.DateTime)
    @OslcReadOnly(false)
    public Date getExecutionEnd()
    {
        // Start of user code getterInit:executionEnd
        // End of user code
        return executionEnd;
    }
    
    
    // Start of user code setterAnnotation:executionSuccess
    // End of user code
    public void setExecutionSuccess(final Boolean executionSuccess )
    {
        // Start of user code setterInit:executionSuccess
        // End of user code
        this.executionSuccess = executionSuccess;
    
        // Start of user code setterFinalize:executionSuccess
        // End of user code
    }
    
    // Start of user code setterAnnotation:action
    // End of user code
    public void setAction(final ExecutableAction action )
    {
        // Start of user code setterInit:action
        // End of user code
        this.action = action;
    
        // Start of user code setterFinalize:action
        // End of user code
    }
    
    // Start of user code setterAnnotation:executionBegin
    // End of user code
    public void setExecutionBegin(final Date executionBegin )
    {
        // Start of user code setterInit:executionBegin
        // End of user code
        this.executionBegin = executionBegin;
    
        // Start of user code setterFinalize:executionBegin
        // End of user code
    }
    
    // Start of user code setterAnnotation:executionEnd
    // End of user code
    public void setExecutionEnd(final Date executionEnd )
    {
        // Start of user code setterInit:executionEnd
        // End of user code
        this.executionEnd = executionEnd;
    
        // Start of user code setterFinalize:executionEnd
        // End of user code
    }
    
    
}
