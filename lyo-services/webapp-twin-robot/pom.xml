<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>se.ericsson.cf.scott.sandbox</groupId>
    <artifactId>sandbox-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../lyo-webapp-parent</relativePath>
  </parent>
  <artifactId>webapp-twin-robot</artifactId>
  <name>Sandbox :: Twin :: Robot</name>
  <packaging>war</packaging>
  <properties>
    <version.lyo>4.0.0-SNAPSHOT</version.lyo>
    <version.jersey>2.25.1</version.jersey>
    <powermock.version>1.7.1</powermock.version>

    <kotlin.version>1.3.31</kotlin.version>
    <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
    <kotlin.compiler.languageVersion>1.3</kotlin.compiler.languageVersion>
    <kotlin.compiler.apiVersion>1.3</kotlin.compiler.apiVersion>
  </properties>
  <dependencies>
    <dependency>
      <groupId>se.ericsson.cf.scott.sandbox</groupId>
      <artifactId>domain-pddl</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>se.ericsson.cf.scott.sandbox</groupId>
      <artifactId>lib-common</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>


    <dependency>
      <groupId>org.eclipse.lyo.trs</groupId>
      <artifactId>trs-client</artifactId>
      <version>${version.lyo}</version>
      <exclusions>
        <exclusion>
          <!--TODO fix upstream-->
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
        <exclusion>
          <!--TODO fix upstream or use Jena 3.8.0; conflicts with Jena stax-api (JENA-1537)-->
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.lyo.trs</groupId>
      <artifactId>trs-server</artifactId>
      <version>${version.lyo}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.paho</groupId>
      <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.lyo.store</groupId>
      <artifactId>store-core</artifactId>
      <version>${version.lyo}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lyo.oslc4j.core</groupId>
      <artifactId>oslc4j-core</artifactId>
      <version>${version.lyo}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.lyo.oslc4j.core</groupId>
      <artifactId>oslc4j-jena-provider</artifactId>
      <version>${version.lyo}</version>
      <exclusions>
        <exclusion>
          <!--TODO fix upstream or use Jena 3.8.0; conflicts with Jena stax-api (JENA-1537)-->
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!--NoClassDefFoundError: org/apache/jena/riot/lang/ReaderRIOTRDFXML-->
      <groupId>org.apache.jena</groupId>
      <artifactId>apache-jena-libs</artifactId>
      <version>3.6.0</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.eclipse.lyo.oslc4j.core</groupId>
      <artifactId>oslc4j-json4j-provider</artifactId>
      <version>${version.lyo}</version>
    </dependency>


    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.25</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>21.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>


    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${version.jersey}</version>
    </dependency>
<!-- since v2.26
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${version.jersey}</version>
    </dependency>
-->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.11.1</version>
      <scope>test</scope>
    </dependency>

<!--
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.20.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit5</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
-->

    <!--TODO clean up-->
    <!--
        <dependency>
          <groupId>org.eclipse.lyo.server</groupId>
          <artifactId>oauth-core</artifactId>
          <version>${version.lyo}</version>
        </dependency>
        <dependency>
          <groupId>org.eclipse.lyo.server</groupId>
          <artifactId>oauth-consumer-store</artifactId>
          <version>${version.lyo}</version>
        </dependency>
        <dependency>
          <groupId>org.eclipse.lyo.server</groupId>
          <artifactId>oauth-webapp</artifactId>
          <version>${version.lyo}</version>
          <type>war</type>
        </dependency>
    -->
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.3.9.v20160517</version>
        <configuration>
          <webAppConfig>
            <contextPath>/</contextPath>
          </webAppConfig>
          <reload>automatic</reload>
          <scanIntervalSeconds>5</scanIntervalSeconds>
          <systemProperties>
            <systemProperty>
              <name>jetty.port</name>
              <value>8080</value>
            </systemProperty>
          </systemProperties>
          <stopKey/>
          <stopPort/>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals> <goal>test-compile</goal> </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/test/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals> <goal>compile</goal> </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals> <goal>testCompile</goal> </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
      </plugin>
    </plugins>
  </build>
</project>
