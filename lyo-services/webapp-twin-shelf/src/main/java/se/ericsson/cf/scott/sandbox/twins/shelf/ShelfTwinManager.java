// Start of user code Copyright
/*******************************************************************************
 * Copyright (c) 2011, 2012 IBM Corporation and others.
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *
 *  The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 *  and the Eclipse Distribution License is available at
 *  http://www.eclipse.org/org/documents/edl-v10.php.
 *
 *  Contributors:
 *
 *	   Sam Padgett	       - initial API and implementation
 *     Michael Fiedler     - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *     Matthieu Helleboid   - Support for multiple Service Providers.
 *     Anass Radouani       - Support for multiple Service Providers.
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/
// End of user code

package se.ericsson.cf.scott.sandbox.twins.shelf;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.ServletContextEvent;

import eu.scott.warehouse.domains.pddl.PlanExecutionResult;

// Start of user code imports
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.servlet.ServletContext;
import org.eclipse.lyo.store.Store;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import se.ericsson.cf.scott.sandbox.twins.shelf.manager.LeshanManager;
import se.ericsson.cf.scott.sandbox.twins.shelf.manager.LyoStoreManager;
import se.ericsson.cf.scott.sandbox.twins.shelf.manager.TrsConsumerManager;
// End of user code

// Start of user code pre_class_code
// End of user code

public class ShelfTwinManager {



    // Start of user code class_attributes
    public final static String PACKAGE_ROOT = ShelfTwinManager.class.getPackage().getName();
    public final static ExecutorService planExecutorSvc = Executors.newSingleThreadExecutor();
    private final static Logger log = LoggerFactory.getLogger(ShelfTwinManager.class);
    private static Store store;
    private static ServletContext context;
    // End of user code


    // Start of user code class_methods
    public static ServletContext getContext() {
        if(context == null) {
            log.warn("The context was accessed before initialisation");
        }
        return context;
    }

    // End of user code

    public static void contextInitializeServletListener(final ServletContextEvent servletContextEvent)
    {
        // Start of user code contextInitializeServletListener

        context = servletContextEvent.getServletContext();

        store = LyoStoreManager.initLyoStore();
        TrsConsumerManager.initTrsConsumer();
        LeshanManager.buildTheLwm2mServer();

        // End of user code
    }


    public static void contextDestroyServletListener(ServletContextEvent servletContextEvent)
    {

        // Start of user code contextDestroyed
        // TODO Implement code to shutdown connections to data backbone etc...
        // End of user code
    }

    public static ServiceProviderInfo[] getServiceProviderInfos(HttpServletRequest httpServletRequest)
    {
        ServiceProviderInfo[] serviceProviderInfos = {};

        // Start of user code "ServiceProviderInfo[] getServiceProviderInfos(...)"
        // FIXME Andrew@2018-02-28: add ctor to Lyo class
        final ServiceProviderInfo serviceProviderInfo = AdaptorHelper.buildSPInfo("default",
                                                                                  "Default Service Provider"
        );
        serviceProviderInfos = new ServiceProviderInfo[]{serviceProviderInfo};
        // End of user code
        return serviceProviderInfos;
    }

    public static PlanExecutionResult getPlanExecutionResult(HttpServletRequest httpServletRequest, final String serviceProviderId, final String planExecutionResultId)
    {
        PlanExecutionResult aResource = null;

        // Start of user code getPlanExecutionResult
        // TODO Implement code to return a resource
        // End of user code
        return aResource;
    }




    public static String getETagFromPlanExecutionResult(final PlanExecutionResult aResource)
    {
        String eTag = null;
        // Start of user code getETagFromPlanExecutionResult
        // TODO Implement code to return an ETag for a particular resource
        // End of user code
        return eTag;
    }

}
